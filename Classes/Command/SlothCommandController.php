<?php
namespace Icti\Sloth\Command;

class SlothCommandController extends \TYPO3\CMS\Extbase\Mvc\Controller\CommandController {

		/**
 		 * @var \TYPO3\CMS\Extbase\Object\ObjectManagerInterface
 		 * @inject
 		 **/
		protected $objectManager;


		/**
 		 * @var \TYPO3\CMS\Extbase\Reflection\ReflectionService
 		 * @inject
 		 **/
		protected $reflectionService;

		/**
 		 *
 		 */
		public function testCommand() {
				error_reporting(E_ALL & ~E_NOTICE);
				//error_reporting(E_ALL);
				ini_set('display_errors', 'STDERR');

				$this->outputLine('TEST OK');

				$models = array();
				foreach($this->getClassesList() as $modelClass) {
						$builder = $this->objectManager->get('Icti\\Sloth\\MetaModel\\Factory');
						$models[] = $builder->get($modelClass);
				}

				$this->generateSQLSchema($models);
				$this->generateTCA($models);

		}

		public function lipsumCommand() {
				error_reporting(E_ALL & ~E_NOTICE);
				ini_set('display_errors', 'STDERR');


				$models = array();
				foreach($this->getClassesList() as $modelClass) {
						$builder = $this->objectManager->get('Icti\\Sloth\\MetaModel\\Builder');
						$models[] = $builder->get($modelClass);
				}

				$persistenceManager = $this->objectManager->get('TYPO3\\CMS\\Extbase\\Persistence\\PersistenceManagerInterface');
				foreach ($models as $metaModel) {
						$className = (string)$metaModel->getModelClassName();
						for ($i=1;$i<=5;$i++) {
								$model = new $className();
								$model->setName((string)$metaModel->getTitle() . ' ' . $i);
								$persistenceManager->add($model);
						}
						$this->outputLine('Generated 5 test records for '.$className);
				}

				$persistenceManager->persistAll();


		}


		protected function generateSQLSchema($models) {
				$view = $this->objectManager->get('Icti\\Sloth\\View\\Php');
				$fileData = $view->render($this->getTemplatePath('ext_tables.sql.php'), $models);

				$appendFilename = $this->getGeneratedFilePath('ext_tables.append.sql');
				if (file_exists($appendFilename)) {
						$appendFileData = file_get_contents( $appendFilename );
						$fileData .= "\n" . $appendFileData;
				}

				file_put_contents( $this->getGeneratedFilePath('ext_tables.sql'), $fileData);
				$this->outputLine('Generated ext_tables.sql');
		}

		protected function generateTCA($models) {
				$fileData = <<<EOT
<?php
/*
 * Generated by Sloth
 */

if (!defined('TYPO3_MODE')) {
	die ('Access denied.');
}

EOT;

				foreach ($models as $model) {
						$builder = $this->objectManager->get('Icti\\Sloth\\Tca\\Builder', $model);
						$tca = $builder->get();
						$serializedTca = serialize($tca);
						//var_dump( $tca['columns'] );
						$fileData .= 't3lib_extMgm::allowTableOnStandardPages(\'' . $builder->getTableName() . '\');' . "\n";
						$fileData .= '$TCA[\'' . $builder->getTableName() . '\'] = unserialize(\'' . serialize($tca). '\');' . "\n";
				}


				$fileData .= <<<EOT
?>
EOT;

				$appendFilename = $this->getGeneratedFilePath('ext_tables.append.php');
				if (file_exists($appendFilename)) {
						$appendFileData = file_get_contents( $appendFilename );
						$fileData .= "\n" . $appendFileData;
				}

				file_put_contents( $this->getGeneratedFilePath('ext_tables.php'), $fileData);
				$this->outputLine('Generated ext_tables.php');

		}

		protected function getTemplatePath($fileName) {
				return 'typo3conf/ext/sloth/Resources/Private/Templates/' . $fileName;
		}

		protected function getGeneratedFilePath($fileName) {
				return 'typo3conf/ext/' . $this->getExtensionKey() . '/' . $fileName;
		}

		protected function getClassesList() {
				return array(
						'\\Icti\\Itemas\\Domain\\Model\\ComunidadAutonoma',
						'\\Icti\\Itemas\\Domain\\Model\\AreaTerapeutica',
						'\\Icti\\Itemas\\Domain\\Model\\EstadoProyecto',
						'\\Icti\\Itemas\\Domain\\Model\\NivelMaduracion',
						'\\Icti\\Itemas\\Domain\\Model\\Programa',
						'\\Icti\\Itemas\\Domain\\Model\\TecnologiaSanitaria',
						'\\Icti\\Itemas\\Domain\\Model\\TipoColaborador',
						'\\Icti\\Itemas\\Domain\\Model\\CategoriaColaborador',
						'\\Icti\\Itemas\\Domain\\Model\\Capacidad',
						'\\Icti\\Itemas\\Domain\\Model\\ServicioConsultoria',
						'\\Icti\\Itemas\\Domain\\Model\\ColaboradorSanitario',
						'\\Icti\\Itemas\\Domain\\Model\\ColaboradorNoSanitario',
						'\\Icti\\Itemas\\Domain\\Model\\TecnologiaTransferible',
						'\\Icti\\Itemas\\Domain\\Model\\Usuario',
						'\\Icti\\Itemas\\Domain\\Model\\GrupoTrabajo',
						'\\Icti\\Itemas\\Domain\\Model\\Metrica',
						'\\Icti\\Itemas\\Domain\\Model\\Indicador',
						'\\Icti\\Itemas\\Domain\\Model\\Noticia',
						'\\Icti\\Itemas\\Domain\\Model\\Actividad',
						'\\Icti\\Itemas\\Domain\\Model\\Publicacion',
						'\\Icti\\Itemas\\Domain\\Model\\Documento',
						'\\Icti\\Itemas\\Domain\\Model\\Resultados'
				);
		}

		protected function getExtensionKey() {
				return 'itemas';
		}

}

?>